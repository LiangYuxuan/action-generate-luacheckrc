-- Config
local prefix = './.wow/BlizzardInterfaceResources/Resources/'
local globals = './.wow/FrameXMLGlobals.lua'
local outputFile = arg[1] or '.luacheckrc'
local headerFile = arg[2] or '.luacheckrc_header'

-- Database
local ThirdParty = {
	"AddOnSkins",
	"BigWigsLoader",
	"DBM",
	"ElvUI",
	"LibStub",
	"TukUI",
	"string.utf8len",
	"string.utf8sub",
}

local MiscCustom = {
	"CUSTOM_CLASS_COLORS",
	"GAME_LOCALE",
}

-- Interface/AddOns/Blizzard_ObjectiveTracker/Blizzard_BonusObjectiveTracker.lua Build 44649
-- Interface/AddOns/Blizzard_ObjectiveTracker/Blizzard_BonusObjectiveTracker.xml Build 45480
local BonusModuleName = {
	'BONUS_OBJECTIVE_TRACKER_MODULE',
	'WORLD_QUEST_TRACKER_MODULE',
}

-- Interface/SharedXML/SharedConstants.lua Build 46144
local GamepadName = {
    "KEY_PADDUP", "KEY_ABBR_PADDUP",
    "KEY_PADDRIGHT", "KEY_ABBR_PADDRIGHT",
    "KEY_PADDDOWN", "KEY_ABBR_PADDDOWN",
    "KEY_PADDLEFT", "KEY_ABBR_PADDLEFT",
    "KEY_PAD1", "KEY_ABBR_PAD1",
    "KEY_PAD2", "KEY_ABBR_PAD2",
    "KEY_PAD3", "KEY_ABBR_PAD3",
    "KEY_PAD4", "KEY_ABBR_PAD4",
    "KEY_PAD5", "KEY_ABBR_PAD5",
    "KEY_PAD6", "KEY_ABBR_PAD6",
    "KEY_PADLSTICK", "KEY_ABBR_PADLSTICK",
    "KEY_PADRSTICK", "KEY_ABBR_PADRSTICK",
    "KEY_PADLSHOULDER", "KEY_ABBR_PADLSHOULDER",
    "KEY_PADRSHOULDER", "KEY_ABBR_PADRSHOULDER",
    "KEY_PADLTRIGGER", "KEY_ABBR_PADLTRIGGER",
    "KEY_PADRTRIGGER", "KEY_ABBR_PADRTRIGGER",
    "KEY_PADLSTICKUP", "KEY_ABBR_PADLSTICKUP",
    "KEY_PADLSTICKRIGHT", "KEY_ABBR_PADLSTICKRIGHT",
    "KEY_PADLSTICKDOWN", "KEY_ABBR_PADLSTICKDOWN",
    "KEY_PADLSTICKLEFT", "KEY_ABBR_PADLSTICKLEFT",
    "KEY_PADRSTICKUP", "KEY_ABBR_PADRSTICKUP",
    "KEY_PADRSTICKRIGHT", "KEY_ABBR_PADRSTICKRIGHT",
    "KEY_PADRSTICKDOWN", "KEY_ABBR_PADRSTICKDOWN",
    "KEY_PADRSTICKLEFT", "KEY_ABBR_PADRSTICKLEFT",
    "KEY_PADPADDLE1", "KEY_ABBR_PADPADDLE1",
    "KEY_PADPADDLE2", "KEY_ABBR_PADPADDLE2",
    "KEY_PADPADDLE3", "KEY_ABBR_PADPADDLE3",
    "KEY_PADPADDLE4", "KEY_ABBR_PADPADDLE4",
    "KEY_PADFORWARD", "KEY_ABBR_PADFORWARD",
    "KEY_PADBACK", "KEY_ABBR_PADBACK",
    "KEY_PADSYSTEM", "KEY_ABBR_PADSYSTEM",
    "KEY_PADSOCIAL", "KEY_ABBR_PADSOCIAL",
    "KEY_PADDUP_LTR", "KEY_ABBR_PADDUP_LTR",
    "KEY_PADDRIGHT_LTR", "KEY_ABBR_PADDRIGHT_LTR",
    "KEY_PADDDOWN_LTR", "KEY_ABBR_PADDDOWN_LTR",
    "KEY_PADDLEFT_LTR", "KEY_ABBR_PADDLEFT_LTR",
    "KEY_PAD1_LTR", "KEY_ABBR_PAD1_LTR",
    "KEY_PAD2_LTR", "KEY_ABBR_PAD2_LTR",
    "KEY_PAD3_LTR", "KEY_ABBR_PAD3_LTR",
    "KEY_PAD4_LTR", "KEY_ABBR_PAD4_LTR",
    "KEY_PADLSHOULDER_LTR", "KEY_ABBR_PADLSHOULDER_LTR",
    "KEY_PADRSHOULDER_LTR", "KEY_ABBR_PADRSHOULDER_LTR",
    "KEY_PADLTRIGGER_LTR", "KEY_ABBR_PADLTRIGGER_LTR",
    "KEY_PADRTRIGGER_LTR", "KEY_ABBR_PADRTRIGGER_LTR",
    "KEY_PADFORWARD_LTR", "KEY_ABBR_PADFORWARD_LTR",
    "KEY_PADBACK_LTR", "KEY_ABBR_PADBACK_LTR",
    "KEY_PADSYSTEM_LTR", "KEY_ABBR_PADSYSTEM_LTR",
    "KEY_PADSOCIAL_LTR", "KEY_ABBR_PADSOCIAL_LTR",
    "KEY_PADDUP_SHP", "KEY_ABBR_PADDUP_SHP",
    "KEY_PADDRIGHT_SHP", "KEY_ABBR_PADDRIGHT_SHP",
    "KEY_PADDDOWN_SHP", "KEY_ABBR_PADDDOWN_SHP",
    "KEY_PADDLEFT_SHP", "KEY_ABBR_PADDLEFT_SHP",
    "KEY_PAD1_SHP", "KEY_ABBR_PAD1_SHP",
    "KEY_PAD2_SHP", "KEY_ABBR_PAD2_SHP",
    "KEY_PAD3_SHP", "KEY_ABBR_PAD3_SHP",
    "KEY_PAD4_SHP", "KEY_ABBR_PAD4_SHP",
    "KEY_PAD5_SHP", "KEY_ABBR_PAD5_SHP",
    "KEY_PAD6_SHP", "KEY_ABBR_PAD6_SHP",
    "KEY_PADLSTICK_SHP", "KEY_ABBR_PADLSTICK_SHP",
    "KEY_PADRSTICK_SHP", "KEY_ABBR_PADRSTICK_SHP",
    "KEY_PADLSHOULDER_SHP", "KEY_ABBR_PADLSHOULDER_SHP",
    "KEY_PADRSHOULDER_SHP", "KEY_ABBR_PADRSHOULDER_SHP",
    "KEY_PADLTRIGGER_SHP", "KEY_ABBR_PADLTRIGGER_SHP",
    "KEY_PADRTRIGGER_SHP", "KEY_ABBR_PADRTRIGGER_SHP",
    "KEY_PADFORWARD_SHP", "KEY_ABBR_PADFORWARD_SHP",
    "KEY_PADBACK_SHP", "KEY_ABBR_PADBACK_SHP",
    "KEY_PADSYSTEM_SHP", "KEY_ABBR_PADSYSTEM_SHP",
    "KEY_PADSOCIAL_SHP", "KEY_ABBR_PADSOCIAL_SHP",
    "KEY_PAD1_REV", "KEY_ABBR_PAD1_REV",
    "KEY_PAD2_REV", "KEY_ABBR_PAD2_REV",
    "KEY_PAD3_REV", "KEY_ABBR_PAD3_REV",
    "KEY_PAD4_REV", "KEY_ABBR_PAD4_REV",
    "KEY_PADLSHOULDER_REV", "KEY_ABBR_PADLSHOULDER_REV",
    "KEY_PADRSHOULDER_REV", "KEY_ABBR_PADRSHOULDER_REV",
    "KEY_PADLTRIGGER_REV", "KEY_ABBR_PADLTRIGGER_REV",
    "KEY_PADRTRIGGER_REV", "KEY_ABBR_PADRTRIGGER_REV",
    "KEY_PADFORWARD_REV", "KEY_ABBR_PADFORWARD_REV",
    "KEY_PADBACK_REV", "KEY_ABBR_PADBACK_REV",
    "KEY_PADSYSTEM_REV", "KEY_ABBR_PADSYSTEM_REV",
    "KEY_PADSOCIAL_REV", "KEY_ABBR_PADSOCIAL_REV",
}

-- GlobalColor.db2 Build 46157
local GlobalColor = {
	"NORMAL_FONT_COLOR",
	"WHITE_FONT_COLOR",
	"HIGHLIGHT_FONT_COLOR",
	"RED_FONT_COLOR",
	"DIM_RED_FONT_COLOR",
	"DULL_RED_FONT_COLOR",
	"BLUE_FONT_COLOR",
	"GREEN_FONT_COLOR",
	"GRAY_FONT_COLOR",
	"YELLOW_FONT_COLOR",
	"LIGHTYELLOW_FONT_COLOR",
	"DARKYELLOW_FONT_COLOR",
	"ORANGE_FONT_COLOR",
	"PASSIVE_SPELL_FONT_COLOR",
	"BATTLENET_FONT_COLOR",
	"TRANSMOGRIFY_FONT_COLOR",
	"DISABLED_FONT_COLOR",
	"WARNING_FONT_COLOR",
	"BRIGHTBLUE_FONT_COLOR",
	"LIGHTBLUE_FONT_COLOR",
	"LIGHTGRAY_FONT_COLOR",
	"GOLD_FONT_COLOR",
	"PAPER_FRAME_EXPANDED_COLOR",
	"PAPER_FRAME_COLLAPSED_COLOR",
	"PAPER_FRAME_DARK_COLOR",
	"PAPER_FRAME_TITLE_COLOR",
	"PAPER_FRAME_TEXT_COLOR",
	"INVALID_EQUIPMENT_COLOR",
	"ACTIONBAR_HOTKEY_FONT_COLOR",
	"PURE_RED_COLOR",
	"ARTIFACT_BAR_COLOR",
	"WARBOARD_OPTION_TEXT_COLOR",
	"DEFAULT_CHAT_CHANNEL_COLOR",
	"DIM_GREEN_FONT_COLOR",
	"BLACK_FONT_COLOR",
	"LINK_FONT_COLOR",
	"SEPIA_COLOR",
	"HIGHLIGHT_LIGHT_BLUE",
	"CORRUPTION_COLOR",
	"LORE_TEXT_BODY_COLOR",
	"RARE_MISSION_COLOR",
	"TUTORIAL_FONT_COLOR",
	"DARKGRAY_COLOR",
	"SCENARIO_STAGE_COLOR",
	"SCENARIO_SUBTITLE_COLOR",
	"CHALLENGE_MODE_TOAST_TITLE_COLOR",
	"TRADESKILL_EXPERIENCE_COLOR",
	"SUBSCRIPTION_INTERSTITIAL_COLOR",
	"GLUE_DIALOG_FONT_COLOR",
	"NEW_FEATURE_SHADOW_COLOR",
	"QUEST_OBJECTIVE_FONT_COLOR",
	"QUEST_OBJECTIVE_HIGHLIGHT_FONT_COLOR",
	"QUEST_OBJECTIVE_DISABLED_FONT_COLOR",
	"QUEST_OBJECTIVE_DISABLED_HIGHLIGHT_FONT_COLOR",
	"AREA_NAME_FONT_COLOR",
	"AREA_DESCRIPTION_FONT_COLOR",
	"INVASION_FONT_COLOR",
	"INVASION_DESCRIPTION_FONT_COLOR",
	"FACTION_RED_COLOR",
	"FACTION_ORANGE_COLOR",
	"FACTION_YELLOW_COLOR",
	"FACTION_GREEN_COLOR",
	"FRIENDS_BNET_NAME_COLOR",
	"FRIENDS_BNET_BACKGROUND_COLOR",
	"FRIENDS_WOW_NAME_COLOR",
	"FRIENDS_WOW_BACKGROUND_COLOR",
	"FRIENDS_GRAY_COLOR",
	"FRIENDS_OFFLINE_BACKGROUND_COLOR",
	"COMMON_GRAY_COLOR",
	"UNCOMMON_GREEN_COLOR",
	"RARE_BLUE_COLOR",
	"EPIC_PURPLE_COLOR",
	"LEGENDARY_ORANGE_COLOR",
	"ARTIFACT_GOLD_COLOR",
	"HEIRLOOM_BLUE_COLOR",
	"PLAYER_FACTION_COLOR_HORDE",
	"PLAYER_FACTION_COLOR_ALLIANCE",
	"TOOLTIP_DEFAULT_COLOR",
	"TOOLTIP_DEFAULT_BACKGROUND_COLOR",
	"KYRIAN_BLUE_COLOR",
	"VENTHYR_RED_COLOR",
	"NIGHT_FAE_BLUE_COLOR",
	"NECROLORD_GREEN_COLOR",
	"ADVENTURES_HEALING_GREEN",
	"ADVENTURES_BUFF_BLUE",
	"ADVENTURES_COMBAT_LOG_GREY",
	"ADVENTURES_COMBAT_LOG_BLUE",
	"ADVENTURES_COMBAT_LOG_ORANGE",
	"ADVENTURES_COMBAT_LOG_YELLOW",
	"ENCOUNTER_JOURNAL_SCROLL_BAR_BACKGROUND_COLOR",
	"RUNEFORGE_LEGEDARY_SPEC_COLOR",
	"SOULBIND_CONDUIT_ENHANCED_COLOR",
	"VERY_DARK_GRAY_COLOR",
	"VERY_LIGHT_GRAY_COLOR",
	"PURE_GREEN_COLOR",
	"PURE_RED_COLOR",
	"TRIVIAL_DIFFICULTY_COLOR",
	"EASY_DIFFICULTY_COLOR",
	"FAIR_DIFFICULTY_COLOR",
	"DIFFICULT_DIFFICULTY_COLOR",
	"IMPOSSIBLE_DIFFICULTY_COLOR",
	"ACHIEVEMENT_INCOMPLETE_COLOR",
	"ACHIEVEMENT_COMPLETE_COLOR",
	"NOT_ON_THREAT_COLOR",
	"NO_THREAT_COLOR",
	"YELLOW_THREAT_COLOR",
	"ORANGE_THREAT_COLOR",
	"RED_THREAT_COLOR",
	"ITEM_POOR_COLOR",
	"ITEM_STANDARD_COLOR",
	"ITEM_GOOD_COLOR",
	"ITEM_WOW_TOKEN_COLOR",
	"ITEM_EPIC_COLOR",
	"ITEM_LEGENDARY_COLOR",
	"ITEM_ARTIFACT_COLOR",
	"ITEM_SCALING_STAT_COLOR",
	"ITEM_SUPERIOR_COLOR",
	"ERROR_COLOR",
	"CONTEXT_FEEDBACK_COLOR",
	"FRIENDLY_STATUS_COLOR",
	"NEUTRAL_STATUS_COLOR",
	"HOSTILE_STATUS_COLOR",
	"SET_ITEM_COLOR",
	"INCREASE_STAT_COLOR",
	"DECREASE_STAT_COLOR",
	"GLYPH_LINK_COLOR",
	"TOY_LINK_COLOR",
	"AZERITE_ESSENCE_COLOR",
	"SPELL_LINK_COLOR",
	"EJ_SPELL_COLOR",
	"ENCHANT_COLOR",
	"TALENT_LINK_COLOR",
	"INSTANCE_LOCK_LINK_COLOR",
	"JOURNAL_LINK_COLOR",
	"BATTLEPET_ABILITY_LINK_COLOR",
	"ENHANCED_CONDUIT_COLOR",
	"SPELL_SUBTEXT_COLOR",
	"TRANSMOGRIFY_COLOR",
	"REFUND_TOOLTIP_COLOR",
	"BIND_TRADE_TOOLTIP_COLOR",
	"USED_IN_TRADESKILL_COLOR",
	"REFUND_TOOLTIP_COLOR",
	"AZERITE_SUBTEXT_COLOR",
	"FRAMESTACK_FRAME_COLOR",
	"FRAMESTACK_HIDDEN_COLOR",
	"FRAMESTACK_REGION_COLOR",
	"ACHIEVEMENT_COLOR",
	"FRIENDS_BROADCAST_TIME_COLOR",
	"FRIENDS_OTHER_NAME_COLOR",
	"DEFAULT_MATERIAL_TEXT_COLOR",
	"DEFAULT_MATERIAL_TITLETEXT_COLOR",
	"STONE_MATERIAL_TITLETEXT_COLOR",
	"STONE_MATERIAL_TEXT_COLOR",
	"PARCHMENT_MATERIAL_TEXT_COLOR",
	"PARCHMENT_MATERIAL_TITLETEXT_COLOR",
	"MARBLE_MATERIAL_TEXT_COLOR",
	"MARBLE_MATERIAL_TITLETEXT_COLOR",
	"SILVER_MATERIAL_TITLETEXT_COLOR",
	"BRONZE_MATERIAL_TITLETEXT_COLOR",
	"SILVER_MATERIAL_TEXT_COLOR",
	"BRONZE_MATERIAL_TEXT_COLOR",
	"PARCHMENTLARGE_MATERIAL_TEXT_COLOR",
	"PARCHMENTLARGE_MATERIAL_TITLETEXT_COLOR",
	"PROGENITOR_MATERIAL_TEXT_COLOR",
	"PROGENITOR_MATERIAL_TITLETEXT_COLOR",
	"ARENA_NAME_FONT_COLOR",
	"AREA_DESCRIPTION_FONT_COLOR",
	"INVASION_FONT_COLOR",
	"INVASION_DESCRIPTION_FONT_COLOR",
	"INACTIVE_COLOR",
	"QUEST_INELIGIBLE_GRAY",
	"DISABLED_REAGENT_COLOR",
	"EDIT_MODE_LAYOUT_LINK_COLOR",
	"EDIT_MODE_GRID_LINE_COLOR",
	"EDIT_MODE_GRID_CENTER_LINE_COLOR",
	"PROFESSION_RECIPE_COLOR",
	"PANEL_BACKGROUND_COLOR",
	"LIGHTERBLUE_FONT_COLOR",
	"PROFESSION_SPEC_COLOR_BLACKSMITHING",
	"PROFESSION_SPEC_COLOR_JEWELCRAFTING",
	"PROFESSION_SPEC_COLOR_ENCHANTING",
	"PROFESSION_SPEC_COLOR_TAILORING",
	"PROFESSION_SPEC_COLOR_HERBALISM",
	"PROFESSION_SPEC_COLOR_MINING",
	"PROFESSION_SPEC_COLOR_SKINNING",
	"PROFESSION_SPEC_COLOR_INSCRIPTION",
	"PROFESSION_SPEC_COLOR_COOKING",
	"PROFESSION_SPEC_COLOR_FISHING",
	"PROFESSION_SPEC_COLOR_FIRST_AID",
	"PROFESSION_SPEC_COLOR_ARCHAEOLOGY",
	"PROFESSION_SPEC_COLOR_LEATHERWORKING",
	"PROFESSION_SPEC_COLOR_ALCHEMY",
	"PROFESSION_SPEC_COLOR_ENGINEERING",
	"EXPEDITION_MAJOR_FACTION_COLOR",
	"VALDRAKKEN_MAJOR_FACTION_COLOR",
	"CENTAUR_MAJOR_FACTION_COLOR",
	"TUSKARR_MAJOR_FACTION_COLOR",
}

local ColorGlobals = {}
for _, text in ipairs(GlobalColor) do
	table.insert(ColorGlobals, text)
	table.insert(ColorGlobals, text .. '_CODE')
end

-- Core
local function loadfileToEnv(path, env)
	if _ENV then
		-- Lua 5.2
		--- @diagnostic disable-next-line: redundant-parameter
		local func, err = loadfile(path, 'bt', env)
		assert(func, err)
		func()
	else
		-- Lua 5.1
		local func, err = loadfile(path)
		assert(func, err)
		setfenv(func, env)
		func()
	end

	return env
end

local destFile = assert(io.open(outputFile, 'w'), "Error opening file " .. outputFile)
local srcFile = io.open(headerFile, 'r')

if srcFile then
	destFile:write(srcFile:read('*a'))
	srcFile:close()
end

local _GlobalStrings = {}; _GlobalStrings._G = {}
local _LuaEnum = {}

local _Frames = dofile(prefix .. 'Frames.lua')
local _FramesXML = dofile(prefix .. 'FrameXML.lua')
local _GlobalAPI = dofile(prefix .. 'GlobalAPI.lua')
loadfileToEnv(prefix .. 'GlobalStrings/enUS.lua', _GlobalStrings)
loadfileToEnv(prefix .. 'LuaEnum.lua', _LuaEnum)

local Frames, LodFrames = _Frames[1], _Frames[2]
local FrameXML, LodFrameXML = _FramesXML[1], _FramesXML[2]
local GlobalAPI, LuaAPI = _GlobalAPI[1], _GlobalAPI[2]
local Mixins = dofile(prefix .. 'Mixins.lua')
local FrameXMLGlobals = dofile(globals)
local GlobalStrings
local Constants = {}
local LEStrings
local Enums = {}

do
	local function SortKeyName(data)
		local result = {}
		for key in pairs(data) do
			table.insert(result, key)
		end

		table.sort(result)
		return result
	end

	for key in pairs(_GlobalStrings._G) do
		_GlobalStrings[key] = true
	end
	_GlobalStrings._G = nil
	GlobalStrings = SortKeyName(_GlobalStrings)

	for key, data in pairs(_LuaEnum.Constants) do
		for indexName in pairs(data) do
			table.insert(Constants, 'Constants.' .. key .. '.' .. indexName)
		end
	end
	table.sort(Constants)
	_LuaEnum.Constants = nil

	local Enum = _LuaEnum.Enum
	_LuaEnum.Enum = nil
	LEStrings = SortKeyName(_LuaEnum)

	for key, data in pairs(Enum) do
		for indexName in pairs(data) do
			table.insert(Enums, 'Enum.' .. key .. '.' .. indexName)
		end
	end
	table.sort(Enums)
end

local tableMap = {
	{ThirdParty,      "Third Party AddOns / Libs"},
	{MiscCustom,      "Misc Custom"},

	-- From Ketho/BlizzardInterfaceResources
	{Frames,          "Frames"},
	{LodFrames,       "Load On Demand Frames"},
	{FrameXML,        "FrameXML Functions"},
	{LodFrameXML,     "Load On Demand FrameXML Functions"},
	{GlobalAPI,       "Global APIs"},
	{LuaAPI,          "Lua APIs"},
	{GlobalStrings,   "Global Strings"},
	{Constants,       "Constants"},
	{LEStrings,       "Global Lua Enum Strings"},
	{Enums,           "Enums"},
	{Mixins,          "Mixins"},

	-- Parse from Gethe/wow-ui-source
	{FrameXMLGlobals, "FrameXML Globals"},

	-- Globals that cannot parsed
	{ColorGlobals,     "Global Colors to Global"},
	{GamepadName,      "Gamepad to Global"},
	{BonusModuleName,  "Bonus Module Name to Global"},
}

destFile:write("read_globals = {")

for _, data in ipairs(tableMap) do
	local tbl, desc = data[1], data[2]

	destFile:write("\n\t-- " .. desc .. "\n")
	for _, name in ipairs(tbl) do
		destFile:write("\t\"" .. name .. "\",\n")
	end
end

destFile:write("}\n")
destFile:close()
